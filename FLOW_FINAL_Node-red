[
    {
        "id": "a8e47745.abf53",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "48873970.f17d88",
        "type": "mqtt in",
        "z": "a8e47745.abf53",
        "name": "Sub_id_code_gen",
        "topic": "polimi/challenge_2/2023/id_code_generator/14",
        "qos": "2",
        "broker": "1f877238.d4df76",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "764b722e.bdb284"
            ]
        ]
    },
    {
        "id": "1303d5c6.7649ca",
        "type": "file in",
        "z": "a8e47745.abf53",
        "name": "Challenge2023_CSV",
        "filename": "/home/user/Desktop/Challenges file/challenge2023_2.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "bd0ad05e.5bad38"
            ]
        ]
    },
    {
        "id": "bd0ad05e.5bad38",
        "type": "csv",
        "z": "a8e47745.abf53",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "f58cb6fd.c5eb7"
            ]
        ]
    },
    {
        "id": "93349f5e.3752b8",
        "type": "debug",
        "z": "a8e47745.abf53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "b7ea1350.4f1358",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Finding n ",
        "func": "if(msg.payload.id){\nmsg.payload = (msg.payload.id + 7878)% 7711;\nglobal.set(\"id_gen\", msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "75e524a7.6519ec"
            ]
        ]
    },
    {
        "id": "1ebf56b.96c7329",
        "type": "json",
        "z": "a8e47745.abf53",
        "name": "json1",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 500,
        "wires": [
            [
                "b7ea1350.4f1358"
            ]
        ]
    },
    {
        "id": "764b722e.bdb284",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Exclude Null messages",
        "func": "if(msg.payload !== \"\"){\n    if(JSON.parse(msg.payload)){\n    p = JSON.parse(msg.payload);\n    if(p.id){\n    return msg;\n}\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 440,
        "wires": [
            [
                "ca89cbd7.fb7cc"
            ]
        ]
    },
    {
        "id": "f58cb6fd.c5eb7",
        "type": "switch",
        "z": "a8e47745.abf53",
        "name": "",
        "property": "payload.col1",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "id_gen",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "57dba9eb.f719d8",
                "8b53d13d.62017",
                "6e946d43.668344"
            ]
        ]
    },
    {
        "id": "57dba9eb.f719d8",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Pub_Message with more than one payload",
        "func": "\nif(msg.payload.col9.includes(\"Publish Message\")){\n    if((msg.payload.col10) && (msg.payload.col10.includes(\"},{\"))){\n    msg.payload = msg.payload.col10.replace(/},/g,'}@');\n    return msg;\n    }  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 100,
        "wires": [
            [
                "94c251d4.9ec828"
            ]
        ]
    },
    {
        "id": "94c251d4.9ec828",
        "type": "split",
        "z": "a8e47745.abf53",
        "name": "",
        "splt": "@",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 910,
        "y": 100,
        "wires": [
            [
                "65ef3ae9.b400dc"
            ]
        ]
    },
    {
        "id": "6e946d43.668344",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Pub_Message without payload",
        "func": "if(msg.payload.col9.includes(\"Publish Message\"))\n{\n    if(!(msg.payload.col10)){\n    msg.payload = \"\";\n    return msg;\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 220,
        "wires": [
            [
                "65ef3ae9.b400dc"
            ]
        ]
    },
    {
        "id": "9d1ffff8.e4c988",
        "type": "mqtt out",
        "z": "a8e47745.abf53",
        "name": "mqtt-pub_PERSON_CODE",
        "topic": "/polimi/iot2023/challenge2/10837878",
        "qos": "2",
        "retain": "",
        "broker": "1f877238.d4df76",
        "x": 1230,
        "y": 100,
        "wires": []
    },
    {
        "id": "65ef3ae9.b400dc",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Create JSON string payloads",
        "func": "if(msg.payload ===\"\"){\n    //msg.payload = \"{\\\"timestamp\\\": \"+Date.now()+\",\"+ \"id :\"+global.get(\"id_gen\")+\",\"+ \"payload: \"+\"\";\n   //msg.payload = \"{\\\"timestamp\\\":\\\"\" + Date.now() + \"\\\",\\\"id\\\":\\\"\" + global.get(\"id_gen\") + \"\\\",\\\"payload\\\"\":+null}\";\nmsg.payload = JSON.stringify({\n  timestamp: Date.now(),\n  id: global.get(\"id_gen\"),\n  payload: null\n});\n   \n    return msg;\n}\nelse{\n    \n    //msg.payload = \"{\\\"timestamp\\\":\\\"\" + Date.now() + \"\\\",\\\"id\\\":\\\"\" + global.get(\"id_gen\") + \"\\\",\\\"payload\\\":\\\"\" + msg.payload + \"\\\"}\";\n   //msg.payload = \"{\\\"timestamp\\\":\\\"\" + Date.now() + \"\\\",\\\"id\\\":\\\"\" + global.get(\"id_gen\") + \"\\\",\\\"payload\\\":\\\"\" + msg.payload + \"}\";\nmsg.payload = JSON.stringify({\n  timestamp: Date.now(),\n  id: global.get(\"id_gen\"),\n  payload: msg.payload\n});\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "9d1ffff8.e4c988"
            ]
        ]
    },
    {
        "id": "b6ce4049.7e355",
        "type": "mqtt in",
        "z": "a8e47745.abf53",
        "name": "mqtt-sub_PERSON_CODE",
        "topic": "/polimi/iot2023/challenge2/10837878",
        "qos": "2",
        "broker": "1f877238.d4df76",
        "x": 850,
        "y": 300,
        "wires": [
            [
                "243fe218.4f85ee",
                "21a586b7.94a562"
            ]
        ]
    },
    {
        "id": "8b53d13d.62017",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Pub_Message with one payload",
        "func": "if(msg.payload.col9.includes(\"Publish Message\")){\n    if((msg.payload.col10) && (!(msg.payload.col10.includes(\"},{\")))){\n    msg.payload = msg.payload.col10;\n    \n    return msg;\n    }  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "65ef3ae9.b400dc"
            ]
        ]
    },
    {
        "id": "75e524a7.6519ec",
        "type": "switch",
        "z": "a8e47745.abf53",
        "name": "switch2",
        "property": "counter",
        "propertyType": "global",
        "rules": [
            {
                "t": "lt",
                "v": "100",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "93349f5e.3752b8",
                "1303d5c6.7649ca",
                "4a94f59b.f003c4"
            ]
        ]
    },
    {
        "id": "4a94f59b.f003c4",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Counting",
        "func": "var counter = global.get(\"counter\") || 0;\ncounter++;\nglobal.set(\"counter\", counter);\nmsg.payload = \"Counter is= \" + counter;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 600,
        "wires": [
            [
                "164d6f29.0002d1"
            ]
        ]
    },
    {
        "id": "bce74043.ce943",
        "type": "change",
        "z": "a8e47745.abf53",
        "name": "Reset Counter to 0",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "bf45850a.aee71",
        "type": "inject",
        "z": "a8e47745.abf53",
        "name": "START_FLOW",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "bce74043.ce943"
            ]
        ]
    },
    {
        "id": "d6ba53c9.986f38",
        "type": "json",
        "z": "a8e47745.abf53",
        "name": "json2",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "e9dafcc4.7fac68",
                "f531f4c1.eb6de8",
                "21a586b7.94a562"
            ]
        ]
    },
    {
        "id": "e9dafcc4.7fac68",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Max Celcius Temp",
        "func": "msg.payload = msg.payload.payload;\n//first we extract null pyloads\nif(msg.payload !==null){\n    //then we parse again to JavaScript object so we can access the unit key and check if it's equal to \"C\"\n    msg.payload=JSON.parse(msg.payload);\n    if(msg.payload.unit ==\"C\"){\n        //Extraction of max value in \"range\"\n        const maxRange = Math.max(...msg.payload.range);\n        msg.payload = maxRange;\n    return msg;\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 260,
        "wires": [
            [
                "be1af60d.8a804"
            ]
        ]
    },
    {
        "id": "feb8030e.11f558",
        "type": "csv",
        "z": "a8e47745.abf53",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,id,payload",
        "skip": "0",
        "x": 1590,
        "y": 340,
        "wires": [
            [
                "2c422ed0.bc07b2"
            ]
        ]
    },
    {
        "id": "f531f4c1.eb6de8",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Creating csv file",
        "func": "\nvar m = msg.payload.payload;\nif(m !==null){\n \n    m =JSON.parse(m);\n    if(m.unit ==\"C\"){\n    return msg;\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 340,
        "wires": [
            [
                "feb8030e.11f558"
            ]
        ]
    },
    {
        "id": "2c422ed0.bc07b2",
        "type": "file",
        "z": "a8e47745.abf53",
        "name": "",
        "filename": "/home/user/Desktop/OUTPUT.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1690,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a9ebc15d.e0fc1",
        "type": "mqtt out",
        "z": "a8e47745.abf53",
        "name": "START 10837878",
        "topic": "/polimi/iot2023/challenge2/10837878",
        "qos": "2",
        "retain": "",
        "broker": "1f877238.d4df76",
        "x": 1760,
        "y": 640,
        "wires": []
    },
    {
        "id": "e2e78a1c.145fd8",
        "type": "mqtt out",
        "z": "a8e47745.abf53",
        "name": "END 10837878",
        "topic": "/polimi/iot2023/challenge2/10837878",
        "qos": "2",
        "retain": "",
        "broker": "1f877238.d4df76",
        "x": 1750,
        "y": 700,
        "wires": []
    },
    {
        "id": "30000737.0d1878",
        "type": "inject",
        "z": "a8e47745.abf53",
        "name": "START payload",
        "topic": "",
        "payload": "START",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1510,
        "y": 640,
        "wires": [
            [
                "a9ebc15d.e0fc1"
            ]
        ]
    },
    {
        "id": "35470455.53c38c",
        "type": "inject",
        "z": "a8e47745.abf53",
        "name": "END payload",
        "topic": "",
        "payload": "END",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1500,
        "y": 700,
        "wires": [
            [
                "e2e78a1c.145fd8"
            ]
        ]
    },
    {
        "id": "243fe218.4f85ee",
        "type": "function",
        "z": "a8e47745.abf53",
        "name": "Excluding Processing START/END message",
        "func": "if((msg.payload!==\"START\")&&(msg.payload!==\"END\")){\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "d6ba53c9.986f38"
            ]
        ]
    },
    {
        "id": "164d6f29.0002d1",
        "type": "debug",
        "z": "a8e47745.abf53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1160,
        "y": 600,
        "wires": []
    },
    {
        "id": "21a586b7.94a562",
        "type": "debug",
        "z": "a8e47745.abf53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1160,
        "y": 380,
        "wires": []
    },
    {
        "id": "8914bc4.2c8f34",
        "type": "inject",
        "z": "a8e47745.abf53",
        "name": "STOP_FLOW",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 720,
        "wires": [
            [
                "ce2668d8.5f6298"
            ]
        ]
    },
    {
        "id": "ce2668d8.5f6298",
        "type": "change",
        "z": "a8e47745.abf53",
        "name": "Reset Counter to -1",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "ca89cbd7.fb7cc",
        "type": "switch",
        "z": "a8e47745.abf53",
        "name": "switch1",
        "property": "counter",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "-1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 440,
        "wires": [
            [
                "1ebf56b.96c7329"
            ]
        ]
    },
    {
        "id": "be1af60d.8a804",
        "type": "ui_chart",
        "z": "a8e47745.abf53",
        "name": "",
        "group": "44fcb118.b2e1b",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1660,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1f877238.d4df76",
        "type": "mqtt-broker",
        "z": "",
        "name": "Polimi_Challenge",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "44fcb118.b2e1b",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "f1a4c78b.7cfa88",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f1a4c78b.7cfa88",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    }
]
